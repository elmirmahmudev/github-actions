name: Container

on: push

jobs:
  node-docker-job:
    runs-on: ubuntu-latest
    services:
      app:
        image: itismelmir/multi-server
        ports:
          - 3001:3000
        
    steps:
      - name: Log node -v
        run: |
          node -v 
          cat /etc/os-release

      - name: git action checkout
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t itismelmir/static-example1:latest .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # - name: Log in to DigitalOcean Container Registry with short-lived credentials
      #   run: doctl registry login --expiry-seconds 600
      - name: Login to Dockerhub
        run: sudo docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to DigitalOcean Container Registry
        run: docker push itismelmir/static-example1

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "."
          target: "."

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: | 
            sudo docker build -t itismelmir/static-example1:latest .
            sudo docker stop gitcont
            sudo docker rm gitcont
            sudo docker run --name gitcont -p 80:80 -d itismelmir/static-example1:latest
      - name: Login to Dockerhub
        run: sudo docker logout
  report-message-job:
    runs-on: ubuntu-latest
    steps:
      - name: report by slack
        uses: docker://technosophos/slack-notify
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "deployed to digital ocean"

        
